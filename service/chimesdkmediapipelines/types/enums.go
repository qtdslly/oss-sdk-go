// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ArtifactsConcatenationState string

// Enum values for ArtifactsConcatenationState
const (
	ArtifactsConcatenationStateEnabled  ArtifactsConcatenationState = "Enabled"
	ArtifactsConcatenationStateDisabled ArtifactsConcatenationState = "Disabled"
)

// Values returns all known values for ArtifactsConcatenationState. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ArtifactsConcatenationState) Values() []ArtifactsConcatenationState {
	return []ArtifactsConcatenationState{
		"Enabled",
		"Disabled",
	}
}

type ArtifactsState string

// Enum values for ArtifactsState
const (
	ArtifactsStateEnabled  ArtifactsState = "Enabled"
	ArtifactsStateDisabled ArtifactsState = "Disabled"
)

// Values returns all known values for ArtifactsState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ArtifactsState) Values() []ArtifactsState {
	return []ArtifactsState{
		"Enabled",
		"Disabled",
	}
}

type AudioArtifactsConcatenationState string

// Enum values for AudioArtifactsConcatenationState
const (
	AudioArtifactsConcatenationStateEnabled AudioArtifactsConcatenationState = "Enabled"
)

// Values returns all known values for AudioArtifactsConcatenationState. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (AudioArtifactsConcatenationState) Values() []AudioArtifactsConcatenationState {
	return []AudioArtifactsConcatenationState{
		"Enabled",
	}
}

type AudioChannelsOption string

// Enum values for AudioChannelsOption
const (
	AudioChannelsOptionStereo AudioChannelsOption = "Stereo"
	AudioChannelsOptionMono   AudioChannelsOption = "Mono"
)

// Values returns all known values for AudioChannelsOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AudioChannelsOption) Values() []AudioChannelsOption {
	return []AudioChannelsOption{
		"Stereo",
		"Mono",
	}
}

type AudioMuxType string

// Enum values for AudioMuxType
const (
	AudioMuxTypeAudioOnly                   AudioMuxType = "AudioOnly"
	AudioMuxTypeAudioWithActiveSpeakerVideo AudioMuxType = "AudioWithActiveSpeakerVideo"
	AudioMuxTypeAudioWithCompositedVideo    AudioMuxType = "AudioWithCompositedVideo"
)

// Values returns all known values for AudioMuxType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (AudioMuxType) Values() []AudioMuxType {
	return []AudioMuxType{
		"AudioOnly",
		"AudioWithActiveSpeakerVideo",
		"AudioWithCompositedVideo",
	}
}

type ConcatenationSinkType string

// Enum values for ConcatenationSinkType
const (
	ConcatenationSinkTypeS3Bucket ConcatenationSinkType = "S3Bucket"
)

// Values returns all known values for ConcatenationSinkType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConcatenationSinkType) Values() []ConcatenationSinkType {
	return []ConcatenationSinkType{
		"S3Bucket",
	}
}

type ConcatenationSourceType string

// Enum values for ConcatenationSourceType
const (
	ConcatenationSourceTypeMediaCapturePipeline ConcatenationSourceType = "MediaCapturePipeline"
)

// Values returns all known values for ConcatenationSourceType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConcatenationSourceType) Values() []ConcatenationSourceType {
	return []ConcatenationSourceType{
		"MediaCapturePipeline",
	}
}

type ContentMuxType string

// Enum values for ContentMuxType
const (
	ContentMuxTypeContentOnly ContentMuxType = "ContentOnly"
)

// Values returns all known values for ContentMuxType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ContentMuxType) Values() []ContentMuxType {
	return []ContentMuxType{
		"ContentOnly",
	}
}

type ContentShareLayoutOption string

// Enum values for ContentShareLayoutOption
const (
	ContentShareLayoutOptionPresenterOnly ContentShareLayoutOption = "PresenterOnly"
	ContentShareLayoutOptionHorizontal    ContentShareLayoutOption = "Horizontal"
	ContentShareLayoutOptionVertical      ContentShareLayoutOption = "Vertical"
)

// Values returns all known values for ContentShareLayoutOption. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ContentShareLayoutOption) Values() []ContentShareLayoutOption {
	return []ContentShareLayoutOption{
		"PresenterOnly",
		"Horizontal",
		"Vertical",
	}
}

type ErrorCode string

// Enum values for ErrorCode
const (
	ErrorCodeBadRequest            ErrorCode = "BadRequest"
	ErrorCodeForbidden             ErrorCode = "Forbidden"
	ErrorCodeNotFound              ErrorCode = "NotFound"
	ErrorCodeResourceLimitExceeded ErrorCode = "ResourceLimitExceeded"
	ErrorCodeServiceFailure        ErrorCode = "ServiceFailure"
	ErrorCodeServiceUnavailable    ErrorCode = "ServiceUnavailable"
	ErrorCodeThrottling            ErrorCode = "Throttling"
)

// Values returns all known values for ErrorCode. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (ErrorCode) Values() []ErrorCode {
	return []ErrorCode{
		"BadRequest",
		"Forbidden",
		"NotFound",
		"ResourceLimitExceeded",
		"ServiceFailure",
		"ServiceUnavailable",
		"Throttling",
	}
}

type LayoutOption string

// Enum values for LayoutOption
const (
	LayoutOptionGridView LayoutOption = "GridView"
)

// Values returns all known values for LayoutOption. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (LayoutOption) Values() []LayoutOption {
	return []LayoutOption{
		"GridView",
	}
}

type LiveConnectorMuxType string

// Enum values for LiveConnectorMuxType
const (
	LiveConnectorMuxTypeAudioWithCompositedVideo    LiveConnectorMuxType = "AudioWithCompositedVideo"
	LiveConnectorMuxTypeAudioWithActiveSpeakerVideo LiveConnectorMuxType = "AudioWithActiveSpeakerVideo"
)

// Values returns all known values for LiveConnectorMuxType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (LiveConnectorMuxType) Values() []LiveConnectorMuxType {
	return []LiveConnectorMuxType{
		"AudioWithCompositedVideo",
		"AudioWithActiveSpeakerVideo",
	}
}

type LiveConnectorSinkType string

// Enum values for LiveConnectorSinkType
const (
	LiveConnectorSinkTypeRtmp LiveConnectorSinkType = "RTMP"
)

// Values returns all known values for LiveConnectorSinkType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (LiveConnectorSinkType) Values() []LiveConnectorSinkType {
	return []LiveConnectorSinkType{
		"RTMP",
	}
}

type LiveConnectorSourceType string

// Enum values for LiveConnectorSourceType
const (
	LiveConnectorSourceTypeChimeSdkMeeting LiveConnectorSourceType = "ChimeSdkMeeting"
)

// Values returns all known values for LiveConnectorSourceType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (LiveConnectorSourceType) Values() []LiveConnectorSourceType {
	return []LiveConnectorSourceType{
		"ChimeSdkMeeting",
	}
}

type MediaPipelineSinkType string

// Enum values for MediaPipelineSinkType
const (
	MediaPipelineSinkTypeS3Bucket MediaPipelineSinkType = "S3Bucket"
)

// Values returns all known values for MediaPipelineSinkType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MediaPipelineSinkType) Values() []MediaPipelineSinkType {
	return []MediaPipelineSinkType{
		"S3Bucket",
	}
}

type MediaPipelineSourceType string

// Enum values for MediaPipelineSourceType
const (
	MediaPipelineSourceTypeChimeSdkMeeting MediaPipelineSourceType = "ChimeSdkMeeting"
)

// Values returns all known values for MediaPipelineSourceType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MediaPipelineSourceType) Values() []MediaPipelineSourceType {
	return []MediaPipelineSourceType{
		"ChimeSdkMeeting",
	}
}

type MediaPipelineStatus string

// Enum values for MediaPipelineStatus
const (
	MediaPipelineStatusInitializing MediaPipelineStatus = "Initializing"
	MediaPipelineStatusInProgress   MediaPipelineStatus = "InProgress"
	MediaPipelineStatusFailed       MediaPipelineStatus = "Failed"
	MediaPipelineStatusStopping     MediaPipelineStatus = "Stopping"
	MediaPipelineStatusStopped      MediaPipelineStatus = "Stopped"
)

// Values returns all known values for MediaPipelineStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MediaPipelineStatus) Values() []MediaPipelineStatus {
	return []MediaPipelineStatus{
		"Initializing",
		"InProgress",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type PresenterPosition string

// Enum values for PresenterPosition
const (
	PresenterPositionTopLeft     PresenterPosition = "TopLeft"
	PresenterPositionTopRight    PresenterPosition = "TopRight"
	PresenterPositionBottomLeft  PresenterPosition = "BottomLeft"
	PresenterPositionBottomRight PresenterPosition = "BottomRight"
)

// Values returns all known values for PresenterPosition. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PresenterPosition) Values() []PresenterPosition {
	return []PresenterPosition{
		"TopLeft",
		"TopRight",
		"BottomLeft",
		"BottomRight",
	}
}

type ResolutionOption string

// Enum values for ResolutionOption
const (
	ResolutionOptionHd  ResolutionOption = "HD"
	ResolutionOptionFhd ResolutionOption = "FHD"
)

// Values returns all known values for ResolutionOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ResolutionOption) Values() []ResolutionOption {
	return []ResolutionOption{
		"HD",
		"FHD",
	}
}

type VideoMuxType string

// Enum values for VideoMuxType
const (
	VideoMuxTypeVideoOnly VideoMuxType = "VideoOnly"
)

// Values returns all known values for VideoMuxType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (VideoMuxType) Values() []VideoMuxType {
	return []VideoMuxType{
		"VideoOnly",
	}
}
